@page "/editar-robo/{RoboId:int}"
@using robos.Data.Models
@using robos.Data
@using BlazorLeaflet
@using BlazorLeaflet.Models
@using BlazorLeaflet.Models.Events
@inject RobosContext rc
@inject IJSRuntime jsr
@inject NavigationManager nm

<h3>Editar Robo</h3>
<br>
<div>
    <EditForm Model="robo" OnValidSubmit="ValidSubmit">
        <div class="form-group mb-3">
            <label>Cedula del Querellante</label>
            <InputText @bind-Value="robo.Cedula" class="form-control" />
        </div>
        <div class="form-group mb-3">
            <label>Nombre del Querellante</label>
            <InputText @bind-Value="robo.Nombre" class="form-control" />
        </div>
        <div class="form-group mb-3">
            <label>Apellido del Querellante</label>
            <InputText @bind-Value="robo.Apellido" class="form-control" />
        </div>
        <div class="form-group mb-3">
            <label>Que se Robaron?</label>
            <InputTextArea @bind-Value="robo.Descripcion" class="form-control" />
        </div>
        <div class="form-group mb-3">
            <label>Valor de lo Robado (en $)</label>
            <InputNumber  @bind-Value="robo.Valor" class="form-control" min="0" />
        </div>
        <div class="form-group mb-3">
            <label>Fecha del Robo</label>
            <InputDate  @bind-Value="robo.Fecha" class="form-control" />
        </div>
        <div class="form-group mb-3">
            <label>Direcci√≥n del Robo</label>
            <InputText @bind-Value="robo.Direccion" class="form-control" />
        </div>
        <div class="form-group mb-3">
            <label>Ubicacion del Robo</label>
            <div id="mapContainer" style="width: 100%; height: 360px;">
                <LeafletMap Map="mapa" />
            </div>
        </div>
        <div class="mb-3 text-center">
            <h4 class="text-danger mt-2 mb-3">@error</h4>
            <button type="submit" class="btn btn-success w-25">Guardar</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public int RoboId { get; set; }

    private Robo robo = null;
    private string error = "";

    private Map mapa = null;
    private Marker ubicacionRobo = null;

    private void ValidSubmit() {
        if (!Functions.ValidaCedula(robo.Cedula)) {
            error = "La cedula no es valida, verifique";
            return;
        }

        error = "";
        rc.SaveChanges();
        nm.NavigateTo("robos-lista");
    }

    protected override void OnInitialized() {
        robo = rc.Robos.First(x => x.Id == RoboId);

        mapa = new Map(jsr) {
            Center = new LatLng(18.9f, -70f),
            Zoom = 7.47f
        };

        ubicacionRobo = new Marker(robo.Latitud, robo.Longitud) {
            Draggable = true,
            Title = "Ubicacion del Robo"
        };

        mapa.OnInitialized += () => {
            mapa.AddLayer(new TileLayer {
                UrlTemplate = "https://tile.openstreetmap.org/{z}/{x}/{y}.png",
                Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors"
            });
            mapa.AddLayer(ubicacionRobo);
        };

        ubicacionRobo.OnDrag += (Marker sender, DragEvent e) => {
            robo.Latitud = e.LatLng.Lat;
            robo.Longitud = e.LatLng.Lng;
        };
    }
}